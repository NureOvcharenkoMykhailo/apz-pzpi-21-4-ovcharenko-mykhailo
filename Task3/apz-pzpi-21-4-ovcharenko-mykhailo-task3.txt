1 МОДЕЛЮВАННЯ ПРОГРАМНОЇ СИСТЕМИ

Основними користувачами системи є 2 типи акторів: клієнти та адміністратори.
Потреби клієнта: можливість отримувати оновлення дієти в режимі реального часу, можливість отримувати повідомлення користувачів про поганий рівень крові, можливість автоматично відстежувати план дієти.
Потреби адміністратора: можливість налаштування HTTP-адреси та порту сервера, можливість налаштування пов'язаного облікового запису, можливість перегляду журналів, можливість відстеження поточного рівня крові, можливість налаштування датчиків.
Взаємодію кожної ролі користувачів з системою представлено на діаграмі прецедентів.
Таким чином, за допомогою діаграми прецедентів було визначено функціональні потреби та взаємодію різних типів користувачів із системою.

2 ПРОГРАМНА РЕАЛІЗАЦІЯ

Для демонстрації можливостей інтернету речей (IoT) було вирішино реалізувати програмний продукт мовою програмування C, що оптимально використовує ресурси та максимально відповідає обмеженням апаратної частини пристроїв IoT. Основною метою цього вибору є забезпечення ефективної роботи на пристроях з обмеженими обчислювальними можливостями.
Для взаємодії з користувачем використовується інтерфейс командного рядка. Це дає можливість легко взаємодіяти з програмою, не витрачаючи зайвих ресурсів на графічний інтерфейс користувача.
Передача даних здійснюється за допомогою бібліотеки Curl. Це забезпечує надійну і швидку взаємодію з сервером чи іншими пристроями через мережу Інтернет. Дані передаються у форматі JSON, що є стандартом для обміну даними в інтернеті.
Програма розроблена з урахуванням мінімального обсягу коду з метою оптимізації для пристроїв з невеликою потужністю. Це дозволить забезпечити швидку та ефективну роботу на таких пристроях, зберігаючи водночас необхідний функціонал.
З метою подальшої адаптації для реальних пристроїв IoT програма розроблена таким чином, щоб її було легко портувати. Це дасть змогу швидко і без проблем впроваджувати її на різноманітні пристрої IoT з різними апаратними можливостями.

3 ТЕХНОЛОГІЇ ТА АРХІТЕКТУРНІ РІШЕННЯ

Для створення IoT частини системи було вибрано мову програмування C, компіляція відбувається за допомогою Clang.
Для більш детальної візуалізації взаємодії пристрою з користувачами системи було розроблено діаграму взаємодії.
Також на основі взаємодії пристрою було побудовано діаграму діяльності, що відображає взаємодію пристрою з сервером.
Таким чином, за допомогою діаграм пакетів, взаємодії та діяльності було визначено основні технології та архітектуру системи.

ВИСНОВКИ

У ході виконання лабораторної роботи були отримані навички з проєктування IoT частини програмної системи. Результатом роботи є розроблена програмна реалізація IoT програмної частини, що використовує Curl та JSON-C бібліотеки. При розробці продукту дотримувались вимоги до чистого коду мови програмування С.
