1.1 Background (Передумови)

У сучасному світі, коли люди все більше звертають увагу на здорове харчування та правильний режим харчування, проблема створення та управління дієтами стає актуальною та важливою. З ростом інтересу до здорового харчування, користувачам стає складніше знаходити та вибирати відповідні продукти для своєї дієти.
Чинні платформи для створення дієт не завжди відповідають сучасним вимогам ефективності та зручності. Часто користувачі стикаються із труднощами у виборі, недостатньою інформацією про продукти та неефективністю процесу створення дієти. Цей проєкт має на меті розв'язати ці проблеми та створити інноваційну програмну систему для створення та управління дієтами.
Програмна система буде надавати користувачам можливість з легкістю створювати, порівнювати та управляти різноманітними дієтами відповідно до їхніх потреб та уподобань. Передбачається високий рівень зручності та функціональності, який буде сприяти покращенню харчувальних звичок користувачів.
Мета програмної системи полягає в створенні простору, де користувачі можуть з легкістю створювати та управляти різними дієтами — від дієт для схуднення та збереження ваги до дієт для покращення здоров'я та відчуття добробуту. Проєкт покликаний полегшити процес створення та управління дієтами, забезпечуючи користувачам великий вибір, інформативність та ефективність у використанні.

1.2 Business Opportunity (Бізнес-можливості)

У конкурентному середовищі систем онлайн-бронювання дозвілля стикаємося з двома основними продуктами-конкурентами: EatThisMuch та Prospre.
EatThisMuch – це платформа, яка створює персоналізовані плани харчування. Можливо, найкращий конкурент, проте вона не має можливості додавати власні продукти, підтримується лише в США. Вона вимагає багато ручного введення даних від користувача і не має мобільного додатку.
Prospre – це платформа для створення планів харчування. Вона використовує мобільний додаток, проте підтримує лише США, показує багато інформації про їжу, але не в легкій для розуміння формі. Це означає, що перегляд кожного продукту займає певний час. Також не підтримує додавання власних продуктів і вимагає занадто багато даних від користувача.
Проєкт Healfood фокусується на оптимізації процесів створення/керування персоналізованими дієтами та їх оновлення на основі складу тіла користувача, адже абсолютній більшості населення занадто нудно заповнювати форми щодня. Наявні послуги мають такі нерозв'язані властивості, як:

• Підтримка додавання власних продуктів – можливість додавати власні продукти, окрім зареєстрованих компанією.
• Підтримка різних джерел щоденних значень – можливість використовувати іншу таблицю добових норм замість тієї, що надається УПМ.
• Автоматична адаптація дієти – моніторинг стану здоров'я користувача за допомогою наручного годинника, щоб адаптувати дієту до потреб користувача

Задоволення цих незадоволених потреб є ключовим аспектом цього проєкту. Продукт буде монетизовано за допомогою стратегії Freemium, де більш персоналізований досвід можна отримати за допомогою преміумфункцій.

2.1 Vision Statement (Окреслення концепції)

Програмна система має на меті розв'язування актуальної проблеми неефективності та нестачі зручності при створенні та управлінні дієтами. Вона буде забезпечувати користувачам зручний інструмент, що дозволить їм швидко та легко створювати, порівнювати та управляти різноманітними дієтами відповідно до їхніх уподобань. Програмна система розрахована на широкий коло користувачів, які мають різні вимоги та уподобання щодо своєї дієти.

2.2 Major Features (Головна функціональність)

MF-1: Створення профілю користувача – можливість реєстрації користувачів в системі з обов'язковим введенням особистих даних для створення облікового запису.
MF-2: Створення та управління дієтами – користувачі зможуть створювати, зберігати, редагувати та видаляти різноманітні дієти за допомогою зручного інтерфейсу.
MF-3: Підбір продуктів та рецептів – система надає рекомендації щодо продуктів та рецептів, які підходять для обраної дієти користувача.
MF-4: Моніторинг стану здоров'я – користувачі можуть вводити дані про своє здоров'я та фізичну активність для автоматичного адаптування рекомендацій дієт.
MF-5: Підтримка додавання власних продуктів – можливість додавати власні продукти до бази даних для персоналізації дієт.
MF-6: Автоматична адаптація дієти – система моніторить стан здоров'я користувача за допомогою наручного годинника для адаптації дієти до потреб користувача.
MF-7: Перегляд статистики та звітів – користувачі можуть переглядати статистику своєї дієти, успішності досягнення цілей та іншу аналітичну інформацію.
MF-8: Мобільний доступ до інформації – користувачі отримають негайний доступ до інформації про продукти, рецепти та рекомендації через мобільний додаток.
MF-9: Налаштування нагадувань та сповіщень – можливість встановлення нагадувань про приймання їжі, водного балансу та інших аспектів дієти.
MF-10: Підтримка різних джерел щоденних значень – можливість вибору таблиці добових норм замість тієї, що надається стандартною системою.

3.1 Scope of Initial Release (Рамки первинного випуску)

Перша версія продукту буде фокусуватися на найважливіших функціях, які нададуть найбільшу цінність для користувачів та проєкту.

Серверна частина повинна включати:
• Реєстрація та авторизація користувачів, з можливістю створення облікових записів у додатку.
• Управління даними щодо створення та управління дієтами, з можливістю легкого створення та редагування дієт через мобільний додаток.
• Миттєвий доступ до інформації про продукти, рецепти та рекомендації для користувачів.
• Екологічні критерії для підбору продуктів та рецептів, які відповідають екологічним стандартам.
• Функції адміністрування для додавання, редагування та видалення інформації про продукти та рецепти, а також модерації доданих користувачами продуктів та дієт.

IoT частина повинна включати:
• Автоматична адаптація дієти на основі показників крові користувача.

Клієнтська частина повинна включати:
• Інтерфейс для реєстрації та авторизації користувачів.
• Можливість легкого створення та управління дієтами.
• Відображення актуальної інформації про продукти, рецепти та рекомендації.
• Функціональність для пошуку продуктів та рецептів за екологічними критеріями.

Мобільна частина повинна включати:
• Мобільний додаток для користувачів на платформі Android для легкого створення та управління дієтами та доступу до інформації.

3.2 Scope of Subsequent Releases (Рамки наступних випусків)

• Розширення бази продуктів та рецептів – додавання нових продуктів та рецептів для більш різноманітної дієти.
• Покращення модерації та модульності – розробка і впровадження ефективних механізмів модерації для швидкого та точного схвалення продуктів та рецептів користувачів.
• Розширення функціональності IoT – інтеграція додаткових функцій IoT для більш точної адаптації дієти на основі показників крові користувача.
• Покращення функцій персоналізації – впровадження додаткових інструментів для персоналізації рекомендацій та дієт.
• Розробка версії додатка для iOS – розробка та випуск мобільного додатка для користувачів на платформі iOS.
• Співпраця з додатковими постачальниками продуктів – підключення нових постачальників продуктів для розширення вибору та якості інгредієнтів в дієті.
• Розширення можливостей співпраці з дієтологами та лікарями – додавання нових функцій для комунікації та консультацій з професіоналами у галузі харчування.

4.3 Operating Environment (Робоче середовище)

Прийматиме користувачів, хто має підключення до Інтернету, для кращого використання необхідний переклад часу та інтерфейсу.
Дані будуть зберігатися в базі даних PostgreSQL в єдиному місці, за винятком резервних сховищ. Перебої в роботі сервісу безпосередньо впливають на його безпеку і є неприпустимими.
Для розробки серверної частини буде використано Python Django та Django REST фреймворк, розроблений у Neovim.
Для розробки IoT буде використовуватися Arduino. Буде встановлено датчики для аналізу крові та датчик серцебиття, код буде розроблено мовою програмування C++ використовуючи бібліотеку Arduino за допомогою Arduino IDE.
Для вебдодатку буде використано фреймворк Svelte.js з використанням Neovim.
Для мобільного додатку буде використано Jetpack Compose мовою програмування Kotlin з використанням Android Studio.

